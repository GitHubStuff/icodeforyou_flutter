# pubspec.yaml icodeforyou_flutter
name: icodeforyou_flutter
publish_to: none
description: Collection of flutter packages

workspace:
  - packages/extensions

environment:
  sdk: ^3.8.1

dev_dependencies:
  melos: ^7.0.0-dev.9

melos:
  scripts:
    analyze:
      run: dart analyze .
    
    build:
      run: dart run build_runner build --delete-conflicting-outputs
    
    test_coverage:
      description: Run tests with coverage in all packages
      exec: flutter test --coverage
    
    coverage_merge:
      description: Merge coverage reports from all workspace packages
      run: |
        mkdir -p coverage
        rm -f coverage/lcov.info
        
        # Find all coverage files in the entire workspace dynamically
        coverage_files=$(find . -path "./coverage" -prune -o -name "lcov.info" -path "*/coverage/lcov.info" -print)
        
        if [ -n "$coverage_files" ]; then
          echo "Found coverage files:"
          echo "$coverage_files"
          
          # Process each coverage file
          for lcov_file in $coverage_files; do
            # Extract the package path: ./packages/extensions/coverage/lcov.info -> packages/extensions
            package_path=$(echo "$lcov_file" | sed 's|^\./||' | sed 's|/coverage/lcov\.info$||')
            package_dir=$(dirname "$package_path")
            package_name=$(basename "$package_path")
            
            echo "Processing coverage for $package_dir/$package_name..."
            
            # Create a temporary file with corrected paths
            temp_file="coverage/temp_${package_dir//\//_}_${package_name}.info"
            sed "s|SF:lib/|SF:${package_path}/lib/|g" "$lcov_file" > "$temp_file"
            
            # Add to the main coverage file
            if [ -f coverage/lcov.info ]; then
              lcov --add-tracefile coverage/lcov.info --add-tracefile "$temp_file" -o coverage/lcov.info
            else
              cp "$temp_file" coverage/lcov.info
            fi
            
            # Clean up temp file
            rm "$temp_file"
          done
          
          # Generate HTML report
          genhtml coverage/lcov.info -o coverage/html --ignore-errors source
          echo "‚úÖ Merged coverage report: coverage/html/index.html"
          
          if [ -f coverage/html/index.html ]; then
            open coverage/html/index.html
          else
            echo "‚ö†Ô∏è  HTML file wasn't created"
            lcov --summary coverage/lcov.info
          fi
        else
          echo "‚ùå No coverage files found. Run 'melos run test_coverage' first."
        fi

    coverage_clean:
      description: Clean all coverage data from workspace
      run: |
        rm -rf coverage/
        find . -name "coverage" -type d -not -path "./coverage" -exec rm -rf {} +
        echo "üßπ Coverage data cleaned from entire workspace"

    list_packages:
      description: List all packages in workspace
      run: |
        echo "üì¶ Workspace packages:"
        find . -name "pubspec.yaml" -not -path "./pubspec.yaml" -exec dirname {} \; | sort

    test_all:
      description: Run tests in all packages
      exec: flutter test

    analyze_all:
      description: Analyze all packages
      exec: dart analyze .